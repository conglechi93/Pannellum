{"ast":null,"code":"var _jsxFileName = \"E:\\\\project742022\\\\react\\\\src\\\\pages\\\\pannellum-view\\\\views\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport { MainListItems } from \"../components/categories\";\nimport CustomizedSnackbars from \"../components/snackbar\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport AddInfoDialog from \"../components/dialogs/addInfoDialog\";\nimport AddSceneDialog from \"../components/dialogs/addSceneDialog\";\nimport DeleteInfoDialog from \"../components/dialogs/deleteInfoDialog\";\nimport DeleteSceneDialog from \"../components/dialogs/deleteSceneDialog\";\nimport LoadSceneDialog from \"../components/dialogs/loadSceneDialog\";\nimport EditInfoDialog from \"../components/dialogs/editInfoDialog\";\nimport EditSceneDialog from \"../components/dialogs/editSceneDialog\";\nimport { Box, Button } from \"@material-ui/core\";\nimport { saveAs } from \"file-saver\";\nimport { initialState, pinCusor } from \"./default-config\";\nimport ReactPannellum, { mouseEventToCoords, changeMouseCursor, getAllScenes, startAutoRotate, stopAutoRotate, showCompass, addScene, destroy } from \"../libs/react-pannellum/dist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    backgroundImage: `url(${\"https://solutions.viettel.vn/wp-content/uploads/2021/01/logo.png\"})`,\n    backgroundSize: \"contain\",\n    backgroundPosition: \"center\",\n    backgroundRepeat: \"no-repeat\",\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    backgroundColor: \"#1976d2\",\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: \"none\"\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\"\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    height: \"100%\",\n    width: \"100%\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\"\n  },\n  fixedHeight: {\n    height: 240\n  }\n}));\nconst types = [{\n  title: \"info\"\n}, {\n  title: \"scene\"\n}];\nexport default function Mainpage() {\n  _s();\n\n  var _state$fullScenesInfo, _state$fullScenesInfo2;\n\n  const classes = useStyles();\n  let fileReader;\n  const [state, setState] = useState({\n    isOpenDrawer: false,\n    // use to open / close the sidebar content\n    openDialog: \"\",\n    // use to open special dialog\n    isSelect: -1,\n    // use to remove highlight of item of sidebar\n    hotSpot: {\n      // use to save config of hotSpot\n      id: \"\",\n      sceneId: \"\",\n      pitch: \"\",\n      type: \"\",\n      yaw: \"\",\n      text: \"\",\n      URL: \"\"\n    },\n    scene: {\n      // use to save / retrieve config of scene\n      sceneId: \"\",\n      config: {\n        type: \"equirectangular\",\n        text: \"\",\n        title: \"\",\n        author: \"\",\n        imageSource: \"\"\n      }\n    },\n    scenes: [],\n    // use to save / retrieve array of scenes\n    isSceneType: false,\n    // use to define \"scene\" type of hotspot when \"Add\"\n    isInfoType: false,\n    // use to define \"info\" type of hotspot when \"Add\"\n    isAddInfo: false,\n    // use to open / close \"Add Hotspot\" Dialog\n    isAddScene: false,\n    // use to open / close \"Add Scene\" Dialog\n    isLoadScene: false,\n    // use to open / close \"Load Scene\" Dialog\n    isEditInfo: false,\n    // use to open / close \"Edit Hotspot\" Dialog\n    isEditScene: false,\n    isDeleteInfo: false,\n    // use to open / close \"Delete Hotspot\" Dialog\n    isDeleteScene: false,\n    // use to open / close \"Delete Scene\" Dialog\n    isLoadConfig: false,\n    loadState: false,\n    config: {\n      sceneFadeDuration: 1000\n    },\n    // config for viewer\n    fullScenesInformation: [],\n    // use save / retrieve all scenes information / configs of this view\n    snackbarAction: {\n      // use to show / hide notification\n      isOpen: false,\n      message: \"\",\n      type: \"\"\n    },\n    coordinates: {}\n  });\n  useEffect(() => {\n    changeMouseCursor(state);\n  }, [state.isAddInfo]);\n  useEffect(() => {\n    if (getAllScenes() === null) {\n      setState(s => ({ ...s,\n        config: { ...s.config\n        }\n      }));\n    } else {\n      setState(s => ({ ...s,\n        fullScenesInformation: getAllScenes()\n      }));\n    }\n  }, [state.isAddInfo, state.isAddScene, state.isLoadScene, state.isEditInfo, state.isEditScene, state.isDeleteInfo, state.isDeleteScene]);\n  useEffect(() => {\n    if (state.fullScenesInformation.length) setState(s => ({ ...s,\n      loadState: false\n    }));\n  }, [state.fullScenesInformation.length]);\n  useEffect(() => {\n    if (state.fullScenesInformation.length) {\n      const array = [...state.fullScenesInformation.slice(1)];\n      array.map((value, index) => {\n        return addScene(Object.keys(value)[0], Object.values(value)[0]);\n      });\n      setState(s => ({ ...s,\n        isLoadConfig: false\n      }));\n    }\n  }, [state.loadState]);\n\n  const handleDrawerOpen = () => {\n    setState(s => ({ ...s,\n      isOpenDrawer: true\n    }));\n  };\n\n  const handleDrawerClose = () => {\n    setState(s => ({ ...s,\n      isOpenDrawer: false\n    }));\n  };\n\n  const handleDialogClose = (index, value) => {\n    switch (index) {\n      case 0:\n        // this case use to close \"Add Info\" dialog when click \"CANCEL\".\n        setState(s => ({ ...s,\n          openDialog: \"\",\n          isSceneType: false,\n          isInfoType: false\n        }));\n        break;\n\n      case 1:\n        setState(s => ({ ...s,\n          openDialog: \"\",\n          isAddInfo: false,\n          isAddScene: false,\n          isDeleteInfo: false,\n          isDeleteScene: false,\n          isLoadScene: false,\n          isSelect: -1,\n          fullScenesInformation: value.fullScenesInformation,\n          config: { ...s.config,\n            title: Object.values(value.fullScenesInformation[0])[0].title,\n            author: Object.values(value.fullScenesInformation[0])[0].author\n          }\n        }));\n        break;\n\n      case 3:\n        // this case use to close all dialog ( except \"Add Info\" ) when click \"CANCEL\".\n        value && actionSuccess(value);\n        setState(s => ({ ...s,\n          openDialog: \"\",\n          isAddInfo: false,\n          isAddScene: false,\n          isEditInfo: false,\n          isEditScene: false,\n          isDeleteInfo: false,\n          isDeleteScene: false,\n          isLoadScene: false,\n          isSelect: -1\n        }));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const actionSuccess = message => {\n    setState(s => ({ ...s,\n      snackbarAction: {\n        isOpen: true,\n        message: message,\n        type: \"success\"\n      }\n    }));\n  };\n\n  const onCloseSnackBar = value => {\n    setState(s => ({ ...s,\n      snackbarAction: { ...s.snackbarAction,\n        isOpen: false\n      }\n    }));\n  };\n\n  const isAddInfo = (data, index) => {\n    setState(s => ({ ...s,\n      isAddInfo: data,\n      isSelect: index\n    }));\n  };\n\n  const isAddScene = (data, index) => {\n    setState(s => ({ ...s,\n      isAddScene: data,\n      isSelect: index\n    }));\n  };\n\n  const isLoadScene = (data, index) => {\n    setState(s => ({ ...s,\n      isLoadScene: data,\n      isSelect: index\n    }));\n  };\n\n  const isEditInfo = (data, index) => {\n    setState(s => ({ ...s,\n      isEditInfo: data,\n      isSelect: index\n    }));\n  };\n\n  const isEditScene = (data, index) => {\n    setState(s => ({ ...s,\n      isEditScene: data,\n      isSelect: index\n    }));\n  };\n\n  const isDeleteInfo = (data, index) => {\n    setState(s => ({ ...s,\n      isDeleteInfo: data,\n      isSelect: index\n    }));\n  };\n\n  const isDeleteScene = (data, index) => {\n    setState(s => ({ ...s,\n      isDeleteScene: data,\n      isSelect: index\n    }));\n  };\n\n  const autoRotate = value => {\n    value ? startAutoRotate() : stopAutoRotate();\n  };\n\n  const enableCompass = value => {\n    showCompass(value);\n  };\n\n  const getMouseEventToCoords = e => {\n    if (state.isAddInfo === true) {\n      setState(s => ({ ...s,\n        openDialog: \"isAddInfo\",\n        hotSpot: { ...s.hotSpot,\n          pitch: mouseEventToCoords(e)[0],\n          yaw: mouseEventToCoords(e)[1]\n        },\n        coordinates: {\n          pitch: mouseEventToCoords(e)[0],\n          yaw: mouseEventToCoords(e)[1]\n        }\n      }));\n    }\n  };\n\n  const handleFileRead = e => {\n    const content = fileReader.result;\n    destroy();\n    setState(s => ({ ...s,\n      fullScenesInformation: JSON.parse(content)\n    }));\n  };\n\n  const handleFileChosen = file => {\n    if (file) {\n      setState(s => ({ ...initialState,\n        fullScenesInformation: [],\n        isLoadConfig: true,\n        loadState: true\n      }));\n      fileReader = new FileReader();\n      fileReader.onloadend = handleFileRead;\n      fileReader.readAsText(file);\n    }\n  };\n\n  const exportConfig = () => {\n    const config = JSON.stringify(getAllScenes());\n    const blob = new Blob([config], {\n      type: \"text/plain;charset=utf-8\"\n    });\n    saveAs(blob, \"Panorama Tour Data.txt\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    style: {\n      cursor: state.isAddInfo ? `url(${pinCusor}), pointer` : \"default\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"absolute\",\n      className: clsx(classes.appBar, state.isOpenDrawer && classes.appBarShift),\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          onClick: handleDrawerOpen,\n          className: clsx(classes.menuButton, state.isOpenDrawer && classes.menuButtonHidden),\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h6\",\n          color: \"inherit\",\n          noWrap: true,\n          className: classes.title,\n          children: \"DEMO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: () => exportConfig(),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \" \"\n          }, void 0, false), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              display: \"none\"\n            },\n            id: \"contained-button-file\",\n            type: \"file\",\n            accept: \".txt\",\n            onChange: e => handleFileChosen(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"contained-button-file\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              component: \"span\",\n              children: \"Load\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      classes: {\n        paper: clsx(classes.drawerPaper, !state.isOpenDrawer && classes.drawerPaperClose)\n      },\n      open: state.isOpenDrawer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.toolbarIcon,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleDrawerClose,\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: /*#__PURE__*/_jsxDEV(MainListItems, {\n          isOpenDrawer: state.isOpenDrawer,\n          isSelect: state.isSelect,\n          isAddInfo: isAddInfo,\n          isAddScene: isAddScene,\n          isLoadScene: isLoadScene,\n          isEditInfo: isEditInfo,\n          isEditScene: isEditScene,\n          isDeleteInfo: isDeleteInfo,\n          isDeleteScene: isDeleteScene,\n          isAutoRotate: autoRotate,\n          isCompass: enableCompass,\n          disable: (_state$fullScenesInfo = state.fullScenesInformation) !== null && _state$fullScenesInfo !== void 0 && _state$fullScenesInfo.length ? false : true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.appBarSpacer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        className: classes.container,\n        children: [(_state$fullScenesInfo2 = state.fullScenesInformation) !== null && _state$fullScenesInfo2 !== void 0 && _state$fullScenesInfo2.length ? /*#__PURE__*/_jsxDEV(ReactPannellum, {\n          onMouseDown: getMouseEventToCoords,\n          id: Object.keys(state.fullScenesInformation[0])[0],\n          sceneId: Object.keys(state.fullScenesInformation[0])[0],\n          imageSource: Object.values(state.fullScenesInformation[0])[0].imageSource,\n          config: state.isLoadConfig ? Object.values(state.fullScenesInformation[0])[0] : state.config\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 13\n        }, this) : null, !state.fullScenesInformation.length && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"warning\",\n          children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n            children: \"Warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 15\n          }, this), \"No scene found, select \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\\"Add Scene\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 38\n          }, this), \" to add the first scene \\u2014 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"check it out!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddInfoDialog, {\n        open: state.openDialog === \"isAddInfo\",\n        close: handleDialogClose,\n        mouseEventToCoords: state.coordinates,\n        fullScenesInformation: state.fullScenesInformation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddSceneDialog, {\n        open: state.isAddScene,\n        close: handleDialogClose,\n        fullScenesInformation: state.fullScenesInformation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadSceneDialog, {\n        open: state.isLoadScene,\n        close: handleDialogClose,\n        fullScenesInformation: state.fullScenesInformation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditInfoDialog, {\n        open: state.isEditInfo,\n        close: handleDialogClose,\n        fullScenesInformation: state.fullScenesInformation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditSceneDialog, {\n        open: state.isEditScene,\n        close: handleDialogClose,\n        fullScenesInformation: state.fullScenesInformation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeleteInfoDialog, {\n        open: state.isDeleteInfo,\n        close: handleDialogClose,\n        fullScenesInformation: state.fullScenesInformation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeleteSceneDialog, {\n        open: state.isDeleteScene,\n        close: handleDialogClose,\n        fullScenesInformation: state.fullScenesInformation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomizedSnackbars, {\n        open: state.snackbarAction[\"isOpen\"],\n        type: state.snackbarAction[\"type\"],\n        message: state.snackbarAction[\"message\"],\n        onClose: onCloseSnackBar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => exportConfig(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 415,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Mainpage, \"vmKB78f1HhmAPuCns7EPR5m+0+E=\", false, function () {\n  return [useStyles];\n});\n\n_c = Mainpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mainpage\");","map":{"version":3,"sources":["E:/project742022/react/src/pages/pannellum-view/views/index.js"],"names":["React","useState","useEffect","clsx","makeStyles","CssBaseline","Drawer","AppBar","Toolbar","List","Typography","Divider","IconButton","Container","MenuIcon","ChevronLeftIcon","MainListItems","CustomizedSnackbars","Alert","AlertTitle","AddInfoDialog","AddSceneDialog","DeleteInfoDialog","DeleteSceneDialog","LoadSceneDialog","EditInfoDialog","EditSceneDialog","Box","Button","saveAs","initialState","pinCusor","ReactPannellum","mouseEventToCoords","changeMouseCursor","getAllScenes","startAutoRotate","stopAutoRotate","showCompass","addScene","destroy","drawerWidth","useStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","mixins","appBar","zIndex","drawer","backgroundColor","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","types","Mainpage","classes","fileReader","state","setState","isOpenDrawer","openDialog","isSelect","hotSpot","id","sceneId","pitch","type","yaw","text","URL","scene","config","author","imageSource","scenes","isSceneType","isInfoType","isAddInfo","isAddScene","isLoadScene","isEditInfo","isEditScene","isDeleteInfo","isDeleteScene","isLoadConfig","loadState","sceneFadeDuration","fullScenesInformation","snackbarAction","isOpen","message","coordinates","s","length","array","slice","map","value","index","Object","keys","values","handleDrawerOpen","handleDrawerClose","handleDialogClose","actionSuccess","onCloseSnackBar","data","autoRotate","enableCompass","getMouseEventToCoords","e","handleFileRead","result","JSON","parse","handleFileChosen","file","FileReader","onloadend","readAsText","exportConfig","stringify","blob","Blob","cursor","target","files"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport { MainListItems } from \"../components/categories\";\r\nimport CustomizedSnackbars from \"../components/snackbar\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport AddInfoDialog from \"../components/dialogs/addInfoDialog\";\r\nimport AddSceneDialog from \"../components/dialogs/addSceneDialog\";\r\nimport DeleteInfoDialog from \"../components/dialogs/deleteInfoDialog\";\r\nimport DeleteSceneDialog from \"../components/dialogs/deleteSceneDialog\";\r\nimport LoadSceneDialog from \"../components/dialogs/loadSceneDialog\";\r\nimport EditInfoDialog from \"../components/dialogs/editInfoDialog\";\r\nimport EditSceneDialog from \"../components/dialogs/editSceneDialog\";\r\nimport { Box, Button } from \"@material-ui/core\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { initialState, pinCusor } from \"./default-config\";\r\nimport ReactPannellum, {\r\n  mouseEventToCoords,\r\n  changeMouseCursor,\r\n  getAllScenes,\r\n  startAutoRotate,\r\n  stopAutoRotate,\r\n  showCompass,\r\n  addScene,\r\n  destroy,\r\n} from \"../libs/react-pannellum/dist\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    backgroundImage: `url(${\"https://solutions.viettel.vn/wp-content/uploads/2021/01/logo.png\"})`,\r\n    backgroundSize: \"contain\",\r\n    backgroundPosition: \"center\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    backgroundColor: \"#1976d2\",\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nconst types = [{ title: \"info\" }, { title: \"scene\" }];\r\n\r\nexport default function Mainpage() {\r\n  const classes = useStyles();\r\n  let fileReader;\r\n\r\n  const [state, setState] = useState({\r\n    isOpenDrawer: false, // use to open / close the sidebar content\r\n    openDialog: \"\", // use to open special dialog\r\n    isSelect: -1, // use to remove highlight of item of sidebar\r\n    hotSpot: {\r\n      // use to save config of hotSpot\r\n      id: \"\",\r\n      sceneId: \"\",\r\n      pitch: \"\",\r\n      type: \"\",\r\n      yaw: \"\",\r\n      text: \"\",\r\n      URL: \"\",\r\n    },\r\n    scene: {\r\n      // use to save / retrieve config of scene\r\n      sceneId: \"\",\r\n      config: {\r\n        type: \"equirectangular\",\r\n        text: \"\",\r\n        title: \"\",\r\n        author: \"\",\r\n        imageSource: \"\",\r\n      },\r\n    },\r\n    scenes: [], // use to save / retrieve array of scenes\r\n    isSceneType: false, // use to define \"scene\" type of hotspot when \"Add\"\r\n    isInfoType: false, // use to define \"info\" type of hotspot when \"Add\"\r\n    isAddInfo: false, // use to open / close \"Add Hotspot\" Dialog\r\n    isAddScene: false, // use to open / close \"Add Scene\" Dialog\r\n    isLoadScene: false, // use to open / close \"Load Scene\" Dialog\r\n    isEditInfo: false, // use to open / close \"Edit Hotspot\" Dialog\r\n    isEditScene: false,\r\n    isDeleteInfo: false, // use to open / close \"Delete Hotspot\" Dialog\r\n    isDeleteScene: false, // use to open / close \"Delete Scene\" Dialog\r\n    isLoadConfig: false,\r\n    loadState: false,\r\n    config: {\r\n      sceneFadeDuration: 1000,\r\n    }, // config for viewer\r\n    fullScenesInformation: [], // use save / retrieve all scenes information / configs of this view\r\n    snackbarAction: {\r\n      // use to show / hide notification\r\n      isOpen: false,\r\n      message: \"\",\r\n      type: \"\",\r\n    },\r\n    coordinates: {},\r\n  });\r\n\r\n  useEffect(() => {\r\n    changeMouseCursor(state);\r\n  }, [state.isAddInfo]);\r\n\r\n  useEffect(() => {\r\n    if (getAllScenes() === null) {\r\n      setState((s) => ({\r\n        ...s,\r\n        config: {\r\n          ...s.config,\r\n        },\r\n      }));\r\n    } else {\r\n      setState((s) => ({\r\n        ...s,\r\n        fullScenesInformation: getAllScenes(),\r\n      }));\r\n    }\r\n  }, [\r\n    state.isAddInfo,\r\n    state.isAddScene,\r\n    state.isLoadScene,\r\n    state.isEditInfo,\r\n    state.isEditScene,\r\n    state.isDeleteInfo,\r\n    state.isDeleteScene,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (state.fullScenesInformation.length)\r\n      setState((s) => ({ ...s, loadState: false }));\r\n  }, [state.fullScenesInformation.length]);\r\n\r\n  useEffect(() => {\r\n    if (state.fullScenesInformation.length) {\r\n      const array = [...state.fullScenesInformation.slice(1)];\r\n      array.map((value, index) => {\r\n        return addScene(Object.keys(value)[0], Object.values(value)[0]);\r\n      });\r\n      setState((s) => ({ ...s, isLoadConfig: false }));\r\n    }\r\n  }, [state.loadState]);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setState((s) => ({ ...s, isOpenDrawer: true }));\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setState((s) => ({ ...s, isOpenDrawer: false }));\r\n  };\r\n\r\n  const handleDialogClose = (index, value) => {\r\n    switch (index) {\r\n      case 0: // this case use to close \"Add Info\" dialog when click \"CANCEL\".\r\n        setState((s) => ({\r\n          ...s,\r\n          openDialog: \"\",\r\n          isSceneType: false,\r\n          isInfoType: false,\r\n        }));\r\n        break;\r\n      case 1:\r\n        setState((s) => ({\r\n          ...s,\r\n          openDialog: \"\",\r\n          isAddInfo: false,\r\n          isAddScene: false,\r\n          isDeleteInfo: false,\r\n          isDeleteScene: false,\r\n          isLoadScene: false,\r\n          isSelect: -1,\r\n          fullScenesInformation: value.fullScenesInformation,\r\n          config: {\r\n            ...s.config,\r\n            title: Object.values(value.fullScenesInformation[0])[0].title,\r\n            author: Object.values(value.fullScenesInformation[0])[0].author,\r\n          },\r\n        }));\r\n        break;\r\n      case 3: // this case use to close all dialog ( except \"Add Info\" ) when click \"CANCEL\".\r\n        value && actionSuccess(value);\r\n        setState((s) => ({\r\n          ...s,\r\n          openDialog: \"\",\r\n          isAddInfo: false,\r\n          isAddScene: false,\r\n          isEditInfo: false,\r\n          isEditScene: false,\r\n          isDeleteInfo: false,\r\n          isDeleteScene: false,\r\n          isLoadScene: false,\r\n          isSelect: -1,\r\n        }));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const actionSuccess = (message) => {\r\n    setState((s) => ({\r\n      ...s,\r\n      snackbarAction: {\r\n        isOpen: true,\r\n        message: message,\r\n        type: \"success\",\r\n      },\r\n    }));\r\n  };\r\n\r\n  const onCloseSnackBar = (value) => {\r\n    setState((s) => ({\r\n      ...s,\r\n      snackbarAction: {\r\n        ...s.snackbarAction,\r\n        isOpen: false,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const isAddInfo = (data, index) => {\r\n    setState((s) => ({\r\n      ...s,\r\n      isAddInfo: data,\r\n      isSelect: index,\r\n    }));\r\n  };\r\n\r\n  const isAddScene = (data, index) => {\r\n    setState((s) => ({\r\n      ...s,\r\n      isAddScene: data,\r\n      isSelect: index,\r\n    }));\r\n  };\r\n\r\n  const isLoadScene = (data, index) => {\r\n    setState((s) => ({\r\n      ...s,\r\n      isLoadScene: data,\r\n      isSelect: index,\r\n    }));\r\n  };\r\n\r\n  const isEditInfo = (data, index) => {\r\n    setState((s) => ({\r\n      ...s,\r\n      isEditInfo: data,\r\n      isSelect: index,\r\n    }));\r\n  };\r\n\r\n  const isEditScene = (data, index) => {\r\n    setState((s) => ({\r\n      ...s,\r\n      isEditScene: data,\r\n      isSelect: index,\r\n    }));\r\n  };\r\n\r\n  const isDeleteInfo = (data, index) => {\r\n    setState((s) => ({\r\n      ...s,\r\n      isDeleteInfo: data,\r\n      isSelect: index,\r\n    }));\r\n  };\r\n\r\n  const isDeleteScene = (data, index) => {\r\n    setState((s) => ({\r\n      ...s,\r\n      isDeleteScene: data,\r\n      isSelect: index,\r\n    }));\r\n  };\r\n\r\n  const autoRotate = (value) => {\r\n    value ? startAutoRotate() : stopAutoRotate();\r\n  };\r\n\r\n  const enableCompass = (value) => {\r\n    showCompass(value);\r\n  };\r\n\r\n  const getMouseEventToCoords = (e) => {\r\n    if (state.isAddInfo === true) {\r\n      setState((s) => ({\r\n        ...s,\r\n        openDialog: \"isAddInfo\",\r\n        hotSpot: {\r\n          ...s.hotSpot,\r\n          pitch: mouseEventToCoords(e)[0],\r\n          yaw: mouseEventToCoords(e)[1],\r\n        },\r\n        coordinates: {\r\n          pitch: mouseEventToCoords(e)[0],\r\n          yaw: mouseEventToCoords(e)[1],\r\n        },\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleFileRead = (e) => {\r\n    const content = fileReader.result;\r\n    destroy();\r\n    setState((s) => ({\r\n      ...s,\r\n      fullScenesInformation: JSON.parse(content),\r\n    }));\r\n  };\r\n\r\n  const handleFileChosen = (file) => {\r\n    if (file) {\r\n      setState((s) => ({\r\n        ...initialState,\r\n        fullScenesInformation: [],\r\n        isLoadConfig: true,\r\n        loadState: true,\r\n      }));\r\n      fileReader = new FileReader();\r\n      fileReader.onloadend = handleFileRead;\r\n      fileReader.readAsText(file);\r\n    }\r\n  };\r\n\r\n  const exportConfig = () => {\r\n    const config = JSON.stringify(getAllScenes());\r\n    const blob = new Blob([config], { type: \"text/plain;charset=utf-8\" });\r\n    saveAs(blob, \"Panorama Tour Data.txt\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      style={{\r\n        cursor: state.isAddInfo ? `url(${pinCusor}), pointer` : \"default\",\r\n      }}\r\n    >\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"absolute\"\r\n        className={clsx(\r\n          classes.appBar,\r\n          state.isOpenDrawer && classes.appBarShift\r\n        )}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(\r\n              classes.menuButton,\r\n              state.isOpenDrawer && classes.menuButtonHidden\r\n            )}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.title}\r\n          >\r\n            DEMO\r\n          </Typography>\r\n          <Box>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => exportConfig()}\r\n            >\r\n              Save\r\n            </Button>\r\n            <> </>\r\n            <input\r\n              style={{ display: \"none\" }}\r\n              id=\"contained-button-file\"\r\n              type=\"file\"\r\n              accept=\".txt\"\r\n              onChange={(e) => handleFileChosen(e.target.files[0])}\r\n            />\r\n            <label htmlFor=\"contained-button-file\">\r\n              <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                Load\r\n              </Button>\r\n            </label>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(\r\n            classes.drawerPaper,\r\n            !state.isOpenDrawer && classes.drawerPaperClose\r\n          ),\r\n        }}\r\n        open={state.isOpenDrawer}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <MainListItems\r\n            isOpenDrawer={state.isOpenDrawer}\r\n            isSelect={state.isSelect}\r\n            isAddInfo={isAddInfo}\r\n            isAddScene={isAddScene}\r\n            isLoadScene={isLoadScene}\r\n            isEditInfo={isEditInfo}\r\n            isEditScene={isEditScene}\r\n            isDeleteInfo={isDeleteInfo}\r\n            isDeleteScene={isDeleteScene}\r\n            isAutoRotate={autoRotate}\r\n            isCompass={enableCompass}\r\n            disable={state.fullScenesInformation?.length ? false : true}\r\n          />\r\n        </List>\r\n        <Divider />\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          {state.fullScenesInformation?.length ? (\r\n            <ReactPannellum\r\n              onMouseDown={getMouseEventToCoords}\r\n              id={Object.keys(state.fullScenesInformation[0])[0]}\r\n              sceneId={Object.keys(state.fullScenesInformation[0])[0]}\r\n              imageSource={\r\n                Object.values(state.fullScenesInformation[0])[0].imageSource\r\n              }\r\n              config={\r\n                state.isLoadConfig\r\n                  ? Object.values(state.fullScenesInformation[0])[0]\r\n                  : state.config\r\n              }\r\n            />\r\n          ) : null}\r\n          {!state.fullScenesInformation.length && (\r\n            <Alert severity=\"warning\">\r\n              <AlertTitle>Warning</AlertTitle>\r\n              No scene found, select <strong>\"Add Scene\"</strong> to add the\r\n              first scene — <strong>check it out!</strong>\r\n            </Alert>\r\n          )}\r\n        </Container>\r\n        <AddInfoDialog\r\n          open={state.openDialog === \"isAddInfo\"}\r\n          close={handleDialogClose}\r\n          mouseEventToCoords={state.coordinates}\r\n          fullScenesInformation={state.fullScenesInformation}\r\n        />\r\n        <AddSceneDialog\r\n          open={state.isAddScene}\r\n          close={handleDialogClose}\r\n          fullScenesInformation={state.fullScenesInformation}\r\n        />\r\n        <LoadSceneDialog\r\n          open={state.isLoadScene}\r\n          close={handleDialogClose}\r\n          fullScenesInformation={state.fullScenesInformation}\r\n        />\r\n        <EditInfoDialog\r\n          open={state.isEditInfo}\r\n          close={handleDialogClose}\r\n          fullScenesInformation={state.fullScenesInformation}\r\n        />\r\n        <EditSceneDialog\r\n          open={state.isEditScene}\r\n          close={handleDialogClose}\r\n          fullScenesInformation={state.fullScenesInformation}\r\n        />\r\n        <DeleteInfoDialog\r\n          open={state.isDeleteInfo}\r\n          close={handleDialogClose}\r\n          fullScenesInformation={state.fullScenesInformation}\r\n        />\r\n        <DeleteSceneDialog\r\n          open={state.isDeleteScene}\r\n          close={handleDialogClose}\r\n          fullScenesInformation={state.fullScenesInformation}\r\n        />\r\n        <CustomizedSnackbars\r\n          open={state.snackbarAction[\"isOpen\"]}\r\n          type={state.snackbarAction[\"type\"]}\r\n          message={state.snackbarAction[\"message\"]}\r\n          onClose={onCloseSnackBar}\r\n        />\r\n         <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => exportConfig()}\r\n            >\r\n              Save\r\n            </Button>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}